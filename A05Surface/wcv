#! /usr/bin/env python

import time
import argparse
import numpy
import skimage.io
from matplotlib import pyplot
import wcv

parser = argparse.ArgumentParser(description="Segment an image")
parser.add_argument("input", type=str, help="Input filename (should be .bmp)")
parser.add_argument("output", type=str, help="Output filename")
parser.add_argument("--mu", type=float, default=8000.0, help="Regularization coefficient (default 8000.0)")
parser.add_argument("--wavelet", type=str, default="haar", help="Name of wavelet (default haar)")
parser.add_argument("--level", type=int, default=1, help="Level of wavelet transforms (default 1)")
parser.add_argument("--c1", type=float, default=1.0, help="Intensity cluster coefficient (default 1.0)")
parser.add_argument("--c2", type=float, default=0.0, help="Intensity cluster coefficient (default 0.0)")
parser.add_argument("--alpha", type=float, default=0.001, help="Primal step size (default 0.001)")
parser.add_argument("--beta", type=float, default=0.001, help="Dual step size (default 0.001)")
parser.add_argument("--out_iters", type=int, default=30, help="Number of outer iterations (default 30)")
parser.add_argument("--in_iters", type=int, default=30, help="Number of inner iterations (default 30)")

args = parser.parse_args()

i = skimage.io.imread(args.input) / 255.0
start = time.time()
u, c1, c2 = wcv.evolve_wcv(i, args.mu, args.wavelet, args.level, args.c1, args.c2, args.alpha, args.beta, args.out_iters, args.in_iters)
end = time.time()
pyplot.figure(figsize=(8.0, 8.0))
pyplot.imshow(i, cmap="gray", vmin=0.0, vmax=1.0)
pyplot.axis("off")
pyplot.contour(u, [0.5], colors="red")
pyplot.savefig(args.output, bbox_inches="tight")
pyplot.show()
pyplot.close()
print("Time: {:.5f}".format(end - start))
print("Final c1: {:.5f}, c2: {:.5f}".format(c1, c2))
